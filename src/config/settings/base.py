"""
Django settings for shop project.

Generated by 'django-admin startproject' using Django 3.1.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""
from os import listdir, getenv
from os.path import basename, dirname, join, normpath, abspath
from sys import path
from datetime import timedelta
import json, logging

# ### PATH CONFIGURATION ################################

# fetch Django's project directory
DJANGO_ROOT = dirname(dirname(abspath(__file__)))

# fetch the project_root
PROJECT_ROOT = dirname(DJANGO_ROOT)

# the name of the whole site
PROJECT_NAME = basename(DJANGO_ROOT)

# Project domain:
# PROJECT_DOMAIN = '%s.com' % PROJECT_NAME.lower()

# Add our project to our pythonpath, this way we don't need to type our project
# name in our dotted import paths:
path.append(PROJECT_ROOT)

# add apps/ to the Python path
path.append(normpath(join(PROJECT_ROOT, 'apps')))

# collect media files here
MEDIA_ROOT = normpath(join(PROJECT_ROOT, 'media'))

# ##### SECURITY CONFIGURATION ############################

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = getenv('SECRET_KEY', '2276i2-j5%_*c#tto+-95n$8sw94e5gf8efi$hzsisvt5c4aqo')

# auth groups config
SECURITY_DIR = normpath(join(PROJECT_ROOT, 'security'))

# ##### APPLICATION CONFIGURATION #########################

# Application definition

# https://docs.djangoproject.com/en/dev/ref/settings/#installed-apps
# APP CONFIGURATION
INSTALLED_APPS = (
    # Defaul Django apps

    # 'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    # Third party apps
    'rest_framework',
    'corsheaders',
    'drf_yasg2',

    # custom apps
    'apps.core',
    'apps.user_managment',
    'apps.shop_managment'
)

# middleware configuration
MIDDLEWARE = (
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
)

CORS_ORIGIN_ALLOW_ALL = True

CORS_EXPOSE_HEADERS = (
    'Content-Disposition',
)

# fixture configuration
# https://docs.djangoproject.com/fr/2.2/ref/settings/#fixture-dirs
FIXTURE_DIRS = (
    normpath(join(PROJECT_ROOT, 'fixtures')),
)

# template configuration
TEMPLATES = (
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            normpath(join(PROJECT_ROOT, 'templates')),
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'django.template.context_processors.i18n',
            ],
        },
    },
)

# rest_framework configuration
REST_FRAMEWORK = {
    'DEFAULT_PARSER_CLASSES': (
        'djangorestframework_camel_case.parser.CamelCaseFormParser',
        'djangorestframework_camel_case.parser.CamelCaseMultiPartParser',
        'djangorestframework_camel_case.parser.CamelCaseJSONParser',
    ),
    'DEFAULT_RENDERER_CLASSES': (
        'djangorestframework_camel_case.render.CamelCaseJSONRenderer',
        'djangorestframework_camel_case.render.CamelCaseBrowsableAPIRenderer',
    ),
    'DEFAULT_SCHEMA_CLASS': 'rest_framework.schemas.coreapi.AutoSchema',
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    ],
    'EXCEPTION_HANDLER': 'apps.core.exception_handler.custom_exception_handler',
    'DEFAULT_PAGINATION_CLASS': 'apps.core.pagination.CustomPagination',
    'DATETIME_FORMAT': "%d/%m/%Y %H:%M:%S",
    'DATE_FORMAT': "%d/%m/%Y",
    "DATE_INPUT_FORMATS": ["%d/%m/%Y"],
}

SWAGGER_SETTINGS = {
    'SHOW_REQUEST_HEADERS': True,
    'SECURITY_DEFINITIONS': {
        'Bearer': {
            'type': 'apiKey',
            'name': 'Authorization',
            'scheme': 'bearer',
            'bearerFormat': 'JWT',
            'in': 'header'
        }
    },
    'USE_SESSION_AUTH': False,
    'JSON_EDITOR': True,
}

# simple_jwt configuration
SIMPLE_JWT = {
    # object which specifies how long access tokens are valid.
    # This timedelta value is added to the current UTC time during token
    # generation to obtain the token's default "exp" claim value.
    'ACCESS_TOKEN_LIFETIME': timedelta(days=1),

    'REFRESH_TOKEN_LIFETIME': timedelta(days=1),
    'ROTATE_REFRESH_TOKENS': False,
    'BLACKLIST_AFTER_ROTATION': True,

    'ALGORITHM': 'HS256',
    'SIGNING_KEY': SECRET_KEY,
    'VERIFYING_KEY': None,
    'AUDIENCE': None,
    'ISSUER': None,

    'AUTH_HEADER_TYPES': ('Bearer',),
    'USER_ID_FIELD': 'id',
    'USER_ID_CLAIM': 'user_id',

    'AUTH_TOKEN_CLASSES': ('rest_framework_simplejwt.tokens.AccessToken',),
    'TOKEN_TYPE_CLAIM': 'token_type',

    'JTI_CLAIM': 'jti',

    'SLIDING_TOKEN_REFRESH_EXP_CLAIM': 'refresh_exp',
    'SLIDING_TOKEN_LIFETIME': timedelta(minutes=5),
    'SLIDING_TOKEN_REFRESH_LIFETIME': timedelta(days=1),
}
# internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# ### DJANGO RUNNING CONFIGURATION ######################

# model configuration
AUTH_USER_MODEL = 'core_apps.User'

# the default WSGI application
WSGI_APPLICATION = '%s.wsgi.application' % PROJECT_NAME

# the root URL configuration
ROOT_URLCONF = '%s.urls' % PROJECT_NAME

# the URL for static files
# https://docs.djangoproject.com/en/2.2/howto/static-files/
STATIC_URL = '/static/'

# the URL for media files
MEDIA_URL = '/media/'

DEBUG = STAGING = False

APPEND_SLASH = False

DATE_FORMAT = '%d/%m/%Y'
DATE_INPUT_FORMATS = ('%d/%m/%Y',)

# ### DATABASE CONFIGURATION ######################################
# https://docs.djangoproject.com/en/dev/ref/settings/#databases
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': getenv('POSTGRES_DB', ''),
        'USER': getenv('POSTGRES_USER', ''),
        'PASSWORD': getenv('POSTGRES_PASSWORD', ''),
        'HOST': getenv('POSTGRES_HOST', ''),
        'PORT': getenv('POSTGRES_PORT', ''),
    }
}


# LOGGING CONFIG
LOGGING = {
    'version': 1,
    'formatters': {
        'verbose': {
            'format': '%(levelname)s %(asctime)s %(module)s %(process)d %(thread)d %(message)s'
        },
        'simple': {
            'format': '%(levelname)s %(message)s'
        },
    },
    'handlers': {
        'console': {
            'level': 'DEBUG',
            'class': 'logging.StreamHandler',
            'formatter': 'simple'
        },
    },
    'loggers': {
        'django': {
            'handlers': ['console'],
            'level': 'DEBUG',
            'propagate': True,
        },
    }
}
# END LOGGING CONFIG
